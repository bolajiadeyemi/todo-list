[{"/Users/bolaji/Documents/training/withDan/to-do-list/src/App.js":"1","/Users/bolaji/Documents/training/withDan/to-do-list/src/components/nav.js":"2","/Users/bolaji/Documents/training/withDan/to-do-list/src/components/add-todo.js":"3","/Users/bolaji/Documents/training/withDan/to-do-list/src/components/task-list.js":"4","/Users/bolaji/Documents/training/withDan/to-do-list/src/reportWebVitals.js":"5"},{"size":643,"mtime":1607259910377,"results":"6","hashOfConfig":"7"},{"size":363,"mtime":1607254134621,"results":"8","hashOfConfig":"7"},{"size":951,"mtime":1607259880195,"results":"9","hashOfConfig":"7"},{"size":1800,"mtime":1607260156278,"results":"10","hashOfConfig":"7"},{"size":362,"mtime":1607253251600,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"7wnrhi",{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/bolaji/Documents/training/withDan/to-do-list/src/App.js",[],"/Users/bolaji/Documents/training/withDan/to-do-list/src/components/nav.js",["24"],"import { render } from '@testing-library/react'\nimport React from 'react'\n\nfunction Nav(){\n    return (\n        <div style={{\n            display: 'flex',\n            justifyContent: 'flex-start',\n            paddingLeft: '20px',\n            backgroundColor: '#4D4D4D',\n        }}>\n            <h2>Todo Do List</h2>\n        </div>\n    );\n};\n\nexport default Nav;\n\n","/Users/bolaji/Documents/training/withDan/to-do-list/src/components/add-todo.js",["25"],"import React, { useRef } from 'react';\n\n\n\nfunction AddTodo({ onAddToTaskList }) {\n    const inputEl = useRef(null);\n    const onButtonClick = () => {\n        // `current` points to the mounted text input element\n        onAddToTaskList(inputEl.current.value) // newtask\n        inputEl.current.value ='';\n      };\n    return (\n        <div>\n            <div style={{\n\n            }}>\n            <input ref={inputEl} type=\"text\" placeholder=\"New Task\" style={{\n                width: '406px',\n                height: '26px',\n            }}/>\n\n            <button type=\"button\" style={{\n                background:'#3379B7', \n                color: '#ffffff',\n                border: 'none', \n                height: '28px', \n                marginLeft: '23px',\n                }}\n                \n                onClick={onButtonClick}\n                                >Add</button>\n            </div>\n        </div>\n    )\n\n}\n\n\nexport default AddTodo;","/Users/bolaji/Documents/training/withDan/to-do-list/src/components/task-list.js",["26","27","28"],"/Users/bolaji/Documents/training/withDan/to-do-list/src/reportWebVitals.js",[],{"ruleId":"29","severity":1,"message":"30","line":1,"column":10,"nodeType":"31","messageId":"32","endLine":1,"endColumn":16},{"ruleId":null,"fatal":true,"severity":2,"message":"33","line":9,"column":33},{"ruleId":"29","severity":1,"message":"34","line":1,"column":17,"nodeType":"31","messageId":"32","endLine":1,"endColumn":26},{"ruleId":"29","severity":1,"message":"35","line":2,"column":10,"nodeType":"31","messageId":"32","endLine":2,"endColumn":28},{"ruleId":"36","severity":1,"message":"37","line":42,"column":32,"nodeType":"38","endLine":42,"endColumn":44},"no-unused-vars","'render' is defined but never used.","Identifier","unusedVar","Parsing error: Unexpected token, expected \",\"\n\n   7 |     const onButtonClick = () => {\n   8 |         // `current` points to the mounted text input element\n>  9 |         onAddToTaskList({inputEl.current.value}) // newtask\n     |                                 ^\n  10 |         inputEl.current.value ='';\n  11 |       };\n  12 |     return (","'useEffect' is defined but never used.","'renderIntoDocument' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement"]